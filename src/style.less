@import url(http://fonts.googleapis.com/css?family=Quicksand:300);
@import url(http://fonts.googleapis.com/css?family=Quicksand:400);

// ***********************************
// Color theme
// ***********************************

@dayColor : 		rgb(20, 20, 20);
@dayHigh :			rgb(6, 108, 126);
@dayBg : 			rgb(240, 240, 240);

@nightColor : 		rgb(240, 240, 240);
@nightHigh :		rgb(239, 123, 89);
@nightBg : 			rgb(20, 20, 20);


// ***********************************
// Width values & transition
// ***********************************

@SplittedFactor :		0.5;
@SplittedHoverFactor :	0.6;
@ExpandedFactor :		0.95;
@ExpandedHoverFactor :	0.9;
@TimeReference :		4s;

@splitted :			100% * @SplittedFactor;

@splittedHover :	100% * @SplittedHoverFactor;
@splittedReduce :	100% - @splittedHover;

@expanded : 		100% * @ExpandedFactor;
@collapsed : 		100% - @expanded;

@expandedReduce :	100% * @ExpandedHoverFactor;
@collapsedHover :	100% - @expandedReduce;


// ***********************************
// Parallax values
// ***********************************

@parallaxFactorBack :		0.1;
@parallaxFactorMiddle :		0.5;
@parallaxFactorFront :		0.3;

@parallaxReference :		1000px;

// ***********************************
// Content specific
// ***********************************

@pageWidth :		800px;
@contentMargin :	-60px;

@borderSize :		3px;
@iconSize :			140px;

@linkNumber :		6;  // actually the number max of links
@linkSize :			30px;
@linkMargin :		5px;
@linksWidth :		@linkSize * @linkNumber + @linkMargin * (@linkNumber - 1);

@thumbnailSize :	40px;

// ***********************************
// Width mixin
// ***********************************

.transition(@time){
	@duration: @time;
	-moz-transition: @duration;
	-webkit-transition: @duration;
	-o-transition: @duration;
	transition: @duration;
}

// TODO review these timing functions
// we might have a problem because there is 2 state an expanded can come from :
// the splitted and the reduced state, and they both are leaded by the same timing function.
// Also, timing don't look accurate, or that might mean we have more case like the lattest.

// Splitted

.widthSplitted() {
	width: @splitted;
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

// Splitted hover

.widthSplittedHover() {
	width: @splittedHover;
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

.widthSplittedReduce() {
	width: @splittedReduce;
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

// Expanded / Collapsed

.widthExpanded() {
	width: @expanded;
	.transition( (@ExpandedFactor - @SplittedHoverFactor) * @TimeReference);
}

.widthCollapsed() {
	width: @collapsed;
	.transition( (@ExpandedFactor - @SplittedHoverFactor) * @TimeReference);
}

// Expanded / Collapsed hover

.widthCollapsedHover() {
	width: @collapsedHover;
	.transition( (@ExpandedFactor - @ExpandedHoverFactor) * @TimeReference);
}

.widthExpandedReduce() {
	width: @expandedReduce;
	.transition( (@ExpandedFactor - @ExpandedHoverFactor) * @TimeReference);
}

// ***********************************
// Parallax mixin
// ***********************************

.parallaxCommon() {
	clear: both;
	position: relative;	
}

// Splitted

.dayParallaxSplitted(@size) {
	.parallaxCommon;
	float: right;
	right: -(@borderSize + @size/2);
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

.nightParallaxSplitted(@size) {
	.parallaxCommon;
	float: left;
	left: -(@borderSize + @size/2);
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

// Splitted hover

.dayParallaxHover(@size, @parallaxFactor) {
	right: -( -@parallaxReference * @parallaxFactor * (@SplittedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

.nightParallaxHover(@size, @parallaxFactor) {
	left: -( -@parallaxReference * @parallaxFactor * (@SplittedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

.dayParallaxReduce(@size, @parallaxFactor) {
	right: -(@parallaxReference * @parallaxFactor * (@SplittedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

.nightParallaxReduce(@size, @parallaxFactor) {
	left: -(@parallaxReference * @parallaxFactor * (@SplittedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@SplittedHoverFactor - @SplittedFactor) * @TimeReference);
}

// Expanded / Collapsed

.dayParallaxExpanded(@size, @parallaxFactor) {
	right: -( -@parallaxReference * @parallaxFactor * (@ExpandedFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @SplittedHoverFactor) * @TimeReference);
}

.nightParallaxExpanded(@size, @parallaxFactor) {
	left: -( -@parallaxReference * @parallaxFactor * (@ExpandedFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @SplittedHoverFactor) * @TimeReference);
}

.dayParallaxCollapsed(@size, @parallaxFactor) {
	right: -(@parallaxReference * @parallaxFactor * (@ExpandedFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @SplittedHoverFactor) * @TimeReference);
}

.nightParallaxCollapsed(@size, @parallaxFactor) {
	left: -(@parallaxReference * @parallaxFactor * (@ExpandedFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @SplittedHoverFactor) * @TimeReference);
}

// Expanded / Collapsed hover

.dayParallaxCollapsedHover(@size, @parallaxFactor) {
	right: -(@parallaxReference * @parallaxFactor * (@ExpandedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @ExpandedHoverFactor) * @TimeReference);
}

.nightParallaxCollapsedHover(@size, @parallaxFactor) {
	left: -(@parallaxReference * @parallaxFactor * (@ExpandedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @ExpandedHoverFactor) * @TimeReference);
}

.dayParallaxExpandedReduce(@size, @parallaxFactor) {
	right: -( -@parallaxReference * @parallaxFactor * (@ExpandedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @ExpandedHoverFactor) * @TimeReference);
}

.nightParallaxExpandedReduce(@size, @parallaxFactor) {
	left: -( -@parallaxReference * @parallaxFactor * (@ExpandedHoverFactor - 0.5) + @borderSize + @size/2);
	.transition( (@ExpandedFactor - @ExpandedHoverFactor) * @TimeReference);
}

// ***********************************
// Misc
// ***********************************

* {
	padding: 0;
	margin: 0;

	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;   
	box-sizing: border-box;
}

html { 
	height: 100%;
}

body {
	width: 100%;
	height: 100%;
	display: table;
	table-layout: fixed;
	overflow-x: hidden;
}

a {
	color : inherit;
	text-decoration: none;
}

// ***********************************
// Display
// ***********************************

.hidden {
	display: none;
}

.nightSide, .daySide {
	display: table-cell;
	min-height: 100%;
	overflow: hidden;
	vertical-align: top;

	padding-bottom: 30px;

	font-family: 'Quicksand', sans-serif;

	.back {
		width: 70px;
		height: 20px;
		padding: 0 5px;
		position: fixed;
		visibility: hidden;
		opacity: 0;
	}

	.icon {
		width: @iconSize;
		height: @iconSize;
		line-height: @iconSize;
		opacity: 0.2;		
	}

	.common {
		display: block;
		width: @pageWidth;
		text-align: center;
	}

	.teaser {
		font-size: 20px;
		font-weight: 400;
		margin-bottom: 0.7em;
	}

	.title {
		font-size: 40px;
		font-weight: 300;
		margin-bottom: 0.7em;
	}

	h1 {
		display: inline;
		font-size: inherit;
		font-weight: inherit;
	}

	.highlight {
		font-size: inherit;
		padding: 0 0.2em 5px 0.2em;
		margin: 0 -0.2em -6px -0.2em;
		border-radius: 3px;
	}

	.links {
		width: @linksWidth;
		text-align: center;
		white-space: nowrap;
		margin: 3em 0;		

		.link {
			display: inline-block;
			border-radius: 2px;
			width: @linkSize;
			height: @linkSize;
			margin-right: @linkMargin;
			opacity: 0.2;
			.transition(0.3s);

			&:hover {
				opacity: 0.8;
				box-shadow: 2px 3px 0px 1px fade(@dayHigh, 50%), -2px -3px 0px 1px fade(@nightHigh, 50%);
				.transition(0.3s);
			}

			&:last-of-type {
				margin-right: 0;
			}
		}
	}

	.content {
		width: @pageWidth;
	}

	li {
		list-style-type: none;
		font-size: 20px;
		margin: 0.3em 0;
		.transition(0.4s);	
	}

	span {
		font-size: 18px;
		margin-bottom: 0.5em;
	}

}

.daySide {
	background: @dayBg;
	border-right: @borderSize solid darken(@dayBg, 20%);
	color: @dayColor;
	text-shadow: lighten(@dayBg, 100%) 0px 1px 1px;

	.back {
		top: 30px;
		left: -50px;
		text-align: right;
		background: darken(@dayBg, 20%);
		border-top-right-radius: 2px;
		border-bottom-right-radius: 2px;

		&:hover {
			left: 0px;			
		}
	}

	.icon {
		background: url("png/day.png");
	}

	.links .link {
		&.github { background: url('png/dayGithub.png');}
		&.twitter { background: url('png/dayTwitter.png');}
		&.gmail { background: url('png/dayGmail.png');}
	}

	.highlight {
		color: @dayBg;		
		text-shadow: darken(@dayBg, 50%) 0px 1px 1px;
		font-weight: bold;
		background: fade(black, 20%);
		.transition(0.4s);

		&:hover {
			.transition(0.4s);
			box-shadow: fade(@dayHigh, 50%) 3px 3px 0px, fade(@nightHigh, 50%) -3px -3px 0px;
			background: fade(black, 80%);
		}		
	}

	.content {
		text-align: right;
	}

	li {
		&:hover {
			.transition(0.4s);
			text-shadow: fade(@dayHigh, 50%) 3px 3px 0px, fade(@nightHigh, 50%) -3px -3px 0px;
		}

		&:after {
			content: "+";
			display: inline-block;
			position: relative;

			width: 1em;
			right: -1em;
			margin-left: -1em;

			color: @dayHigh;
		}			
	}

	.portfolio {
		.project {
			clear: both;
			margin: 1em 0;
			//border-bottom: 1px dotted darken(@dayBg, 20%);

			> h1 {
				float: right;
				vertical-align: top;
				height: @thumbnailSize;
				width: 200px;
				line-height: @thumbnailSize;
				overflow: hidden;
				text-overflow: ellipsis;
			}

			> .caption {
				float: right;
				clear: both;
			}

			.view {

				display: inline-block;
				vertical-align: top;
				width: @thumbnailSize;		


				&:nth-last-of-type(1) > .viewContent { right: 0; }
				&:nth-last-of-type(2) > .viewContent { right: -(@thumbnailSize + 5px); }
				&:nth-last-of-type(3) > .viewContent { right: -2 * (@thumbnailSize + 5px); }
				&:nth-last-of-type(4) > .viewContent { right: -3 * (@thumbnailSize + 4px); }
				&:nth-last-of-type(5) > .viewContent { right: -4 * (@thumbnailSize + 4px); }
				&:nth-last-of-type(6) > .viewContent { right: -5 * (@thumbnailSize + 4px); }
				&:nth-last-of-type(7) > .viewContent { right: -6 * (@thumbnailSize + 4px); }
				&:nth-last-of-type(8) > .viewContent { right: -7 * (@thumbnailSize + 4px); }													
				&:nth-last-of-type(9) > .viewContent { right: -8 * (@thumbnailSize + 4px); }				

				input {
					display: none;

					&:checked + label {
						background: darken(@dayBg, 40%)
					}

					&:checked {
						& ~ .viewContent {
							display: block;
						}
					}
				}

				label {
					display: block;
					float: right;
					width: @thumbnailSize;
					height: @thumbnailSize;
					background: darken(@dayBg, 20%);
					border-radius: 2px;
				}

				.viewContent {
					position: relative;
					display: none;
					float: right;
					clear: both;
					margin : 1em 0;
					width: @pageWidth;
				}
			}
		}
	}
}

.nightSide {
	background: @nightBg;
	border-left: @borderSize solid lighten(@nightBg, 20%);
	color: @nightColor;
	text-shadow: darken(@nightBg, 100%) 0px 1px 1px ;

	.back {
		top: 30px;
		right: -50px;
		text-align: left;
		background: lighten(@nightBg, 20%);
		border-top-left-radius: 2px;
		border-bottom-left-radius: 2px;

		&:hover {
			right: 0px;		
		}			
	}

	.icon{
		background: url("png/night.png");
	}

	.links .link {
		&.github { background: url('png/nightGithub.png');}
		&.twitter { background: url('png/nightTwitter.png');}
		&.gmail { background: url('png/nightGmail.png');}		
	}

	.highlight {
		color: @nightBg;		
		text-shadow: lighten(@nightBg, 50%) 0px 1px 1px;
		font-weight: bold;
		background: fade(white, 20%);
		.transition(0.4s);

		&:hover {
			.transition(0.4s);
			box-shadow: fade(@nightHigh, 50%) 3px 3px 0px, fade(@dayHigh, 50%) -3px -3px 0px;
			background: fade(white, 80%);
		}	
	}

	.content {
		text-align: left;
	}

	li {
		&:hover {
			.transition(0.4s);
			text-shadow: fade(@nightHigh, 50%) -3px -3px 0px, fade(@dayHigh, 50%) 3px 3px 0px;
		}

		&:before {
			content: "+";
			display: inline-block;
			position: relative;

			width: 1em;		
			left: -1em;
			margin-right: -1em;

			color: @nightHigh;
		}
	}	
}

span#day, span#night {
	display: none;
}

// ***********************************
// Splitted hover
// ***********************************

body:hover {

	.daySide:not(:hover) {
		.widthSplittedReduce;
		.icon {				.dayParallaxReduce(@iconSize, @parallaxFactorBack);				}
		.common {				.dayParallaxReduce(@pageWidth, @parallaxFactorMiddle);			}
		.links {			.dayParallaxReduce(@linksWidth, @parallaxFactorMiddle);			}
		.content {			.dayParallaxReduce(@contentMargin, @parallaxFactorFront);		}
	}

	.nightSide:not(:hover) {
		.widthSplittedReduce;	
		.icon {				.nightParallaxReduce(@iconSize, @parallaxFactorBack);			}
		.common {				.nightParallaxReduce(@pageWidth, @parallaxFactorMiddle);		}
		.links {			.nightParallaxReduce(@linksWidth, @parallaxFactorMiddle);		}
		.content {			.nightParallaxReduce(@contentMargin, @parallaxFactorFront);		}	
	}	

	.daySide:hover {
		.widthSplittedHover;
		.icon{				.dayParallaxHover(@iconSize, @parallaxFactorBack);				}
		.common {				.dayParallaxHover(@pageWidth, @parallaxFactorMiddle);			}
		.links {			.dayParallaxHover(@linksWidth, @parallaxFactorMiddle);			}
		.content {			.dayParallaxHover(@contentMargin, @parallaxFactorFront);		}
	}

	.nightSide:hover {
		.widthSplittedHover;
		.icon{				.nightParallaxHover(@iconSize, @parallaxFactorBack);			}
		.common {				.nightParallaxHover(@pageWidth, @parallaxFactorMiddle);			}
		.links {			.nightParallaxHover(@linksWidth, @parallaxFactorMiddle);			}
		.content {			.nightParallaxHover(@contentMargin, @parallaxFactorFront);		}
	}
}

// ***********************************
// Splitted
// ***********************************

.daySide {
	.widthSplitted;
	.icon {				.dayParallaxSplitted(@iconSize);		}
	.common {				.dayParallaxSplitted(@pageWidth);		}
	.links {			.dayParallaxSplitted(@linksWidth);		}
	.content {			.dayParallaxSplitted(@contentMargin);	}
}

.nightSide {
	.widthSplitted;
	.icon {				.nightParallaxSplitted(@iconSize);		}	
	.common {				.nightParallaxSplitted(@pageWidth);		}
	.links {			.nightParallaxSplitted(@linksWidth);		}
	.content {			.nightParallaxSplitted(@contentMargin);	}
}

// ***********************************
// Expanded / Collapsed hover
// ***********************************

body:hover {

	#day:target ~ .daySide:not(:hover) {
		.widthExpandedReduce;
		.icon {				.dayParallaxExpandedReduce(@iconSize, @parallaxFactorBack);				}
		.common {				.dayParallaxExpandedReduce(@pageWidth, @parallaxFactorMiddle);			}
		.links {			.dayParallaxExpandedReduce(@linksWidth, @parallaxFactorMiddle);			}
		.content {			.dayParallaxExpandedReduce(@contentMargin, @parallaxFactorFront);		}
	}

	#day:target ~ .nightSide:hover {
		.widthCollapsedHover;		
		.icon {				.nightParallaxCollapsedHover(@iconSize, @parallaxFactorBack);			}
		.common {				.nightParallaxCollapsedHover(@pageWidth, @parallaxFactorMiddle);		}
		.links {			.nightParallaxCollapsedHover(@linksWidth, @parallaxFactorMiddle);		}
		.content {			.nightParallaxCollapsedHover(@contentMargin, @parallaxFactorFront);		}		
	}

	#night:target ~ .nightSide:not(:hover) {
		.widthExpandedReduce;	
		.icon {				.nightParallaxExpandedReduce(@iconSize, @parallaxFactorBack);			}
		.common {				.nightParallaxExpandedReduce(@pageWidth, @parallaxFactorMiddle);		}
		.links {			.nightParallaxExpandedReduce(@linksWidth, @parallaxFactorMiddle);		}
		.content {			.nightParallaxExpandedReduce(@contentMargin, @parallaxFactorFront);		}
	}

	#night:target ~ .daySide:hover {
		.widthCollapsedHover;
		.icon {				.dayParallaxCollapsedHover(@iconSize, @parallaxFactorBack);				}
		.common {				.dayParallaxCollapsedHover(@pageWidth, @parallaxFactorMiddle);			}
		.links {			.dayParallaxCollapsedHover(@linksWidth, @parallaxFactorMiddle);			}
		.content {			.dayParallaxCollapsedHover(@contentMargin, @parallaxFactorFront);		}
	}	
}

// ***********************************
// Expanded / Collapsed
// ***********************************

#day:target ~ .daySide {
	.widthExpanded;
	.back {
		visibility: hidden;
		opacity: 0;
		.transition(@TimeReference * @SplittedFactor);
	}
	.icon {				.dayParallaxExpanded(@iconSize, @parallaxFactorBack);				}
	.common {				.dayParallaxExpanded(@pageWidth, @parallaxFactorMiddle);			}
	.links {			.dayParallaxExpanded(@linksWidth, @parallaxFactorMiddle);			}
	.content {			.dayParallaxExpanded(@contentMargin, @parallaxFactorFront);			}

}

#day:target ~ .nightSide {
	.widthCollapsed;
	.back {
		visibility: visible;
		opacity: 1;
		.transition(@TimeReference * @SplittedFactor);		
	}
	.icon {				.nightParallaxCollapsed(@iconSize, @parallaxFactorBack);			}
	.common {				.nightParallaxCollapsed(@pageWidth, @parallaxFactorMiddle);			}
	.links {			.nightParallaxCollapsed(@linksWidth, @parallaxFactorMiddle);		}
	.content {			.nightParallaxCollapsed(@contentMargin, @parallaxFactorFront);		}

}

#night:target ~ .nightSide {
	.widthExpanded;
	.back {
		visibility: hidden;
		opacity: 0;
		.transition(@TimeReference * @SplittedFactor);		
	}
	.icon {				.nightParallaxExpanded(@iconSize, @parallaxFactorBack);				}
	.common {				.nightParallaxExpanded(@pageWidth, @parallaxFactorMiddle);			}
	.links {			.nightParallaxExpanded(@linksWidth, @parallaxFactorMiddle);			}
	.content {			.nightParallaxExpanded(@contentMargin, @parallaxFactorFront);		}	

}

#night:target ~ .daySide {
	.widthCollapsed;
	.back {
		visibility: visible;
		opacity: 1;
		.transition(@TimeReference * @SplittedFactor);		
	}
	.icon {				.dayParallaxCollapsed(@iconSize, @parallaxFactorBack);				}
	.common {				.dayParallaxCollapsed(@pageWidth, @parallaxFactorMiddle);			}
	.links {			.dayParallaxCollapsed(@linksWidth, @parallaxFactorMiddle);			}
	.content {			.dayParallaxCollapsed(@contentMargin, @parallaxFactorFront);		}

}

// ***********************************
// Version mobile
// ***********************************

@media screen and (max-width: 640px) {
	html {
		width: 640px;
	}
}